// <auto-generated />
using System;
using Merchant.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Merchant.Core.Migrations
{
    [DbContext(typeof(MerchantDbContext))]
    [Migration("20220525061321_changed_long_to_guid")]
    partial class changed_long_to_guid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Merchant.Core.Models.MerchantTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ConfirmedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Crypto")
                        .HasColumnType("int");

                    b.Property<double>("CryptoPrice")
                        .HasColumnType("float");

                    b.Property<long>("MerchantUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Uah")
                        .HasColumnType("float");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MerchantUserId");

                    b.ToTable("MerchantTransactions");
                });

            modelBuilder.Entity("Merchant.Core.Models.MerchantUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AppUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("WebhookAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MerchantUsers");
                });

            modelBuilder.Entity("Merchant.Core.Models.MerchantTransaction", b =>
                {
                    b.HasOne("Merchant.Core.Models.MerchantUser", "MerchantUser")
                        .WithMany("MerchantTransactions")
                        .HasForeignKey("MerchantUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MerchantUser");
                });

            modelBuilder.Entity("Merchant.Core.Models.MerchantUser", b =>
                {
                    b.Navigation("MerchantTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
